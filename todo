todo
0. add ft_map.hpp + tests
1. add reverse_iterator (vector/map) + tests
2. test timing stack
3. test timing vector iterators
4. test lexicographical_compare
5. test type_traits
6. templated tests (vector, stack, map)
7. test _everyting_ with -Wconversion and valgrind
8. test size_max for vector !!!
9. is_constructible and co. (cf. type_traits) for pair conversions
--> need by -Wconversion
10. test const_iterator
11. fix output_vector tests (cf. FAIL sections)
12. iterators operators: member or non-member functions ?
13. rb_tree: use _comp to compare keys (otherwise remove it)
14. handle error when _any_ allocate() fails (gotta catch bad_alloc)
15. output_vector: use ft _and_ std to check asserts (i.g. for iterator_test)
16. debug iso_stardard script
________

maybe
- explicit qualifer upon constructors
- ft::equal (upon all ft datatypes: map, vector, tree, pair, etc.)
- ikos --> utile pour les uninitialized values (valgrind output_stack)
- configure script
- `make all` re-mkdir output folders but not timing ones...
- rename src/ into test/
- keep our iterator_traits but forget abour our iterator struct
--> this way, we can use stl algorithms act upon our containers
- east const instead of west const
________

readme

- explain why constructors are not explicit (but could be and how it is useful)
- explain why east const instead of west const
--> the only consistent way to write const (got to read from right-to-left)
________

map
- AVL (named after its inventor Adelson, Velski & Landis)
- RBT (Red Black Tree : the one used by stl)
________

iterators
- vector --> random access iterator
- map    --> bidirectional iterator
- base_iterator (iterator traits typedefs + operateurs comparaison)
________

template <bool>
struct ft_static_assert;

template <>
struct ft_static_assert<true>{};
________
